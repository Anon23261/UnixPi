from typing import Any, Dict, List, Optional, Set, Tuple, Union

class Packet:
    def __init__(self) -> None: ...
    def summary(self) -> str: ...
    def show(self) -> None: ...
    def __getitem__(self, key: str) -> Any: ...

class IP(Packet): ...
class TCP(Packet): ...
class UDP(Packet): ...
class ICMP(Packet): ...
class HTTP(Packet): ...
class HTTPRequest(Packet): ...

def sniff(
    count: Optional[int] = None,
    store: bool = True,
    offline: Optional[str] = None,
    prn: Optional[Any] = None,
    filter: Optional[str] = None,
    iface: Optional[str] = None,
    timeout: Optional[int] = None,
    stop_filter: Optional[Any] = None,
) -> List[Packet]: ...

class conf:
    iface: str
